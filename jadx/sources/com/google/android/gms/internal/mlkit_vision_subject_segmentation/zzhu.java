package com.google.android.gms.internal.mlkit_vision_subject_segmentation;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;
import org.telegram.messenger.R;

/* compiled from: com.google.android.gms:play-services-mlkit-subject-segmentation@@16.0.0-beta1 */
/* loaded from: classes.dex */
final class zzhu implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzhu zza = new zzhu();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzbd;
    private static final FieldDescriptor zzbe;
    private static final FieldDescriptor zzbf;
    private static final FieldDescriptor zzbg;
    private static final FieldDescriptor zzbh;
    private static final FieldDescriptor zzbi;
    private static final FieldDescriptor zzbj;
    private static final FieldDescriptor zzbk;
    private static final FieldDescriptor zzbl;
    private static final FieldDescriptor zzbm;
    private static final FieldDescriptor zzbn;
    private static final FieldDescriptor zzbo;
    private static final FieldDescriptor zzbp;
    private static final FieldDescriptor zzbq;
    private static final FieldDescriptor zzbr;
    private static final FieldDescriptor zzbs;
    private static final FieldDescriptor zzbt;
    private static final FieldDescriptor zzbu;
    private static final FieldDescriptor zzbv;
    private static final FieldDescriptor zzbw;
    private static final FieldDescriptor zzbx;
    private static final FieldDescriptor zzby;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzbz zzbzVar = new zzbz();
        zzbzVar.zza(1);
        zzb = builder.withProperty(zzbzVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzbz zzbzVar2 = new zzbz();
        zzbzVar2.zza(2);
        zzc = builder2.withProperty(zzbzVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzbz zzbzVar3 = new zzbz();
        zzbzVar3.zza(37);
        zzd = builder3.withProperty(zzbzVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzbz zzbzVar4 = new zzbz();
        zzbzVar4.zza(61);
        zze = builder4.withProperty(zzbzVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzbz zzbzVar5 = new zzbz();
        zzbzVar5.zza(3);
        zzf = builder5.withProperty(zzbzVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzbz zzbzVar6 = new zzbz();
        zzbzVar6.zza(20);
        zzg = builder6.withProperty(zzbzVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzbz zzbzVar7 = new zzbz();
        zzbzVar7.zza(4);
        zzh = builder7.withProperty(zzbzVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzbz zzbzVar8 = new zzbz();
        zzbzVar8.zza(29);
        zzi = builder8.withProperty(zzbzVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzbz zzbzVar9 = new zzbz();
        zzbzVar9.zza(5);
        zzj = builder9.withProperty(zzbzVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzbz zzbzVar10 = new zzbz();
        zzbzVar10.zza(59);
        zzk = builder10.withProperty(zzbzVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzbz zzbzVar11 = new zzbz();
        zzbzVar11.zza(6);
        zzl = builder11.withProperty(zzbzVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzbz zzbzVar12 = new zzbz();
        zzbzVar12.zza(79);
        zzm = builder12.withProperty(zzbzVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzbz zzbzVar13 = new zzbz();
        zzbzVar13.zza(7);
        zzn = builder13.withProperty(zzbzVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzbz zzbzVar14 = new zzbz();
        zzbzVar14.zza(58);
        zzo = builder14.withProperty(zzbzVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzbz zzbzVar15 = new zzbz();
        zzbzVar15.zza(48);
        zzp = builder15.withProperty(zzbzVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzbz zzbzVar16 = new zzbz();
        zzbzVar16.zza(49);
        zzq = builder16.withProperty(zzbzVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzbz zzbzVar17 = new zzbz();
        zzbzVar17.zza(18);
        zzr = builder17.withProperty(zzbzVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzbz zzbzVar18 = new zzbz();
        zzbzVar18.zza(26);
        zzs = builder18.withProperty(zzbzVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzbz zzbzVar19 = new zzbz();
        zzbzVar19.zza(27);
        zzt = builder19.withProperty(zzbzVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzbz zzbzVar20 = new zzbz();
        zzbzVar20.zza(28);
        zzu = builder20.withProperty(zzbzVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzbz zzbzVar21 = new zzbz();
        zzbzVar21.zza(44);
        zzv = builder21.withProperty(zzbzVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzbz zzbzVar22 = new zzbz();
        zzbzVar22.zza(45);
        zzw = builder22.withProperty(zzbzVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzbz zzbzVar23 = new zzbz();
        zzbzVar23.zza(19);
        zzx = builder23.withProperty(zzbzVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzbz zzbzVar24 = new zzbz();
        zzbzVar24.zza(21);
        zzy = builder24.withProperty(zzbzVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzbz zzbzVar25 = new zzbz();
        zzbzVar25.zza(22);
        zzz = builder25.withProperty(zzbzVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzbz zzbzVar26 = new zzbz();
        zzbzVar26.zza(8);
        zzA = builder26.withProperty(zzbzVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzbz zzbzVar27 = new zzbz();
        zzbzVar27.zza(9);
        zzB = builder27.withProperty(zzbzVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzbz zzbzVar28 = new zzbz();
        zzbzVar28.zza(10);
        zzC = builder28.withProperty(zzbzVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzbz zzbzVar29 = new zzbz();
        zzbzVar29.zza(11);
        zzD = builder29.withProperty(zzbzVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzbz zzbzVar30 = new zzbz();
        zzbzVar30.zza(12);
        zzE = builder30.withProperty(zzbzVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzbz zzbzVar31 = new zzbz();
        zzbzVar31.zza(13);
        zzF = builder31.withProperty(zzbzVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzbz zzbzVar32 = new zzbz();
        zzbzVar32.zza(14);
        zzG = builder32.withProperty(zzbzVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzbz zzbzVar33 = new zzbz();
        zzbzVar33.zza(15);
        zzH = builder33.withProperty(zzbzVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzbz zzbzVar34 = new zzbz();
        zzbzVar34.zza(16);
        zzI = builder34.withProperty(zzbzVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzbz zzbzVar35 = new zzbz();
        zzbzVar35.zza(17);
        zzJ = builder35.withProperty(zzbzVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzbz zzbzVar36 = new zzbz();
        zzbzVar36.zza(23);
        zzK = builder36.withProperty(zzbzVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzbz zzbzVar37 = new zzbz();
        zzbzVar37.zza(24);
        zzL = builder37.withProperty(zzbzVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzbz zzbzVar38 = new zzbz();
        zzbzVar38.zza(25);
        zzM = builder38.withProperty(zzbzVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzbz zzbzVar39 = new zzbz();
        zzbzVar39.zza(39);
        zzN = builder39.withProperty(zzbzVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzbz zzbzVar40 = new zzbz();
        zzbzVar40.zza(40);
        zzO = builder40.withProperty(zzbzVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzbz zzbzVar41 = new zzbz();
        zzbzVar41.zza(30);
        zzP = builder41.withProperty(zzbzVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzbz zzbzVar42 = new zzbz();
        zzbzVar42.zza(31);
        zzQ = builder42.withProperty(zzbzVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzbz zzbzVar43 = new zzbz();
        zzbzVar43.zza(32);
        zzR = builder43.withProperty(zzbzVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzbz zzbzVar44 = new zzbz();
        zzbzVar44.zza(33);
        zzS = builder44.withProperty(zzbzVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzbz zzbzVar45 = new zzbz();
        zzbzVar45.zza(34);
        zzT = builder45.withProperty(zzbzVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzbz zzbzVar46 = new zzbz();
        zzbzVar46.zza(35);
        zzU = builder46.withProperty(zzbzVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzbz zzbzVar47 = new zzbz();
        zzbzVar47.zza(36);
        zzV = builder47.withProperty(zzbzVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzbz zzbzVar48 = new zzbz();
        zzbzVar48.zza(46);
        zzW = builder48.withProperty(zzbzVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzbz zzbzVar49 = new zzbz();
        zzbzVar49.zza(47);
        zzX = builder49.withProperty(zzbzVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzbz zzbzVar50 = new zzbz();
        zzbzVar50.zza(69);
        zzY = builder50.withProperty(zzbzVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzbz zzbzVar51 = new zzbz();
        zzbzVar51.zza(42);
        zzZ = builder51.withProperty(zzbzVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzbz zzbzVar52 = new zzbz();
        zzbzVar52.zza(50);
        zzaa = builder52.withProperty(zzbzVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzbz zzbzVar53 = new zzbz();
        zzbzVar53.zza(51);
        zzab = builder53.withProperty(zzbzVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzbz zzbzVar54 = new zzbz();
        zzbzVar54.zza(52);
        zzac = builder54.withProperty(zzbzVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzbz zzbzVar55 = new zzbz();
        zzbzVar55.zza(53);
        zzad = builder55.withProperty(zzbzVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzbz zzbzVar56 = new zzbz();
        zzbzVar56.zza(54);
        zzae = builder56.withProperty(zzbzVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzbz zzbzVar57 = new zzbz();
        zzbzVar57.zza(60);
        zzaf = builder57.withProperty(zzbzVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzbz zzbzVar58 = new zzbz();
        zzbzVar58.zza(85);
        zzag = builder58.withProperty(zzbzVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzbz zzbzVar59 = new zzbz();
        zzbzVar59.zza(86);
        zzah = builder59.withProperty(zzbzVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzbz zzbzVar60 = new zzbz();
        zzbzVar60.zza(87);
        zzai = builder60.withProperty(zzbzVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzbz zzbzVar61 = new zzbz();
        zzbzVar61.zza(55);
        zzaj = builder61.withProperty(zzbzVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzbz zzbzVar62 = new zzbz();
        zzbzVar62.zza(56);
        zzak = builder62.withProperty(zzbzVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzbz zzbzVar63 = new zzbz();
        zzbzVar63.zza(57);
        zzal = builder63.withProperty(zzbzVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzbz zzbzVar64 = new zzbz();
        zzbzVar64.zza(62);
        zzam = builder64.withProperty(zzbzVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzbz zzbzVar65 = new zzbz();
        zzbzVar65.zza(63);
        zzan = builder65.withProperty(zzbzVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzbz zzbzVar66 = new zzbz();
        zzbzVar66.zza(64);
        zzao = builder66.withProperty(zzbzVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzbz zzbzVar67 = new zzbz();
        zzbzVar67.zza(65);
        zzap = builder67.withProperty(zzbzVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzbz zzbzVar68 = new zzbz();
        zzbzVar68.zza(66);
        zzaq = builder68.withProperty(zzbzVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzbz zzbzVar69 = new zzbz();
        zzbzVar69.zza(67);
        zzar = builder69.withProperty(zzbzVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzbz zzbzVar70 = new zzbz();
        zzbzVar70.zza(68);
        zzas = builder70.withProperty(zzbzVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzbz zzbzVar71 = new zzbz();
        zzbzVar71.zza(70);
        zzat = builder71.withProperty(zzbzVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzbz zzbzVar72 = new zzbz();
        zzbzVar72.zza(71);
        zzau = builder72.withProperty(zzbzVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzbz zzbzVar73 = new zzbz();
        zzbzVar73.zza(72);
        zzav = builder73.withProperty(zzbzVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzbz zzbzVar74 = new zzbz();
        zzbzVar74.zza(73);
        zzaw = builder74.withProperty(zzbzVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzbz zzbzVar75 = new zzbz();
        zzbzVar75.zza(74);
        zzax = builder75.withProperty(zzbzVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzbz zzbzVar76 = new zzbz();
        zzbzVar76.zza(75);
        zzay = builder76.withProperty(zzbzVar76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzbz zzbzVar77 = new zzbz();
        zzbzVar77.zza(76);
        zzaz = builder77.withProperty(zzbzVar77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzbz zzbzVar78 = new zzbz();
        zzbzVar78.zza(77);
        zzaA = builder78.withProperty(zzbzVar78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzbz zzbzVar79 = new zzbz();
        zzbzVar79.zza(78);
        zzaB = builder79.withProperty(zzbzVar79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzbz zzbzVar80 = new zzbz();
        zzbzVar80.zza(80);
        zzaC = builder80.withProperty(zzbzVar80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzbz zzbzVar81 = new zzbz();
        zzbzVar81.zza(81);
        zzaD = builder81.withProperty(zzbzVar81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzbz zzbzVar82 = new zzbz();
        zzbzVar82.zza(82);
        zzaE = builder82.withProperty(zzbzVar82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzbz zzbzVar83 = new zzbz();
        zzbzVar83.zza(83);
        zzaF = builder83.withProperty(zzbzVar83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzbz zzbzVar84 = new zzbz();
        zzbzVar84.zza(84);
        zzaG = builder84.withProperty(zzbzVar84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzbz zzbzVar85 = new zzbz();
        zzbzVar85.zza(88);
        zzaH = builder85.withProperty(zzbzVar85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzbz zzbzVar86 = new zzbz();
        zzbzVar86.zza(89);
        zzaI = builder86.withProperty(zzbzVar86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzbz zzbzVar87 = new zzbz();
        zzbzVar87.zza(90);
        zzaJ = builder87.withProperty(zzbzVar87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzbz zzbzVar88 = new zzbz();
        zzbzVar88.zza(91);
        zzaK = builder88.withProperty(zzbzVar88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzbz zzbzVar89 = new zzbz();
        zzbzVar89.zza(92);
        zzaL = builder89.withProperty(zzbzVar89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzbz zzbzVar90 = new zzbz();
        zzbzVar90.zza(93);
        zzaM = builder90.withProperty(zzbzVar90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzbz zzbzVar91 = new zzbz();
        zzbzVar91.zza(94);
        zzaN = builder91.withProperty(zzbzVar91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzbz zzbzVar92 = new zzbz();
        zzbzVar92.zza(95);
        zzaO = builder92.withProperty(zzbzVar92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzbz zzbzVar93 = new zzbz();
        zzbzVar93.zza(96);
        zzaP = builder93.withProperty(zzbzVar93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzbz zzbzVar94 = new zzbz();
        zzbzVar94.zza(97);
        zzaQ = builder94.withProperty(zzbzVar94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzbz zzbzVar95 = new zzbz();
        zzbzVar95.zza(98);
        zzaR = builder95.withProperty(zzbzVar95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzbz zzbzVar96 = new zzbz();
        zzbzVar96.zza(99);
        zzaS = builder96.withProperty(zzbzVar96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzbz zzbzVar97 = new zzbz();
        zzbzVar97.zza(100);
        zzaT = builder97.withProperty(zzbzVar97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzbz zzbzVar98 = new zzbz();
        zzbzVar98.zza(101);
        zzaU = builder98.withProperty(zzbzVar98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzbz zzbzVar99 = new zzbz();
        zzbzVar99.zza(R.styleable.AppCompatTheme_textAppearanceLargePopupMenu);
        zzaV = builder99.withProperty(zzbzVar99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzbz zzbzVar100 = new zzbz();
        zzbzVar100.zza(R.styleable.AppCompatTheme_textAppearanceListItem);
        zzaW = builder100.withProperty(zzbzVar100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzbz zzbzVar101 = new zzbz();
        zzbzVar101.zza(R.styleable.AppCompatTheme_textAppearanceListItemSecondary);
        zzaX = builder101.withProperty(zzbzVar101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzbz zzbzVar102 = new zzbz();
        zzbzVar102.zza(R.styleable.AppCompatTheme_textAppearanceListItemSmall);
        zzaY = builder102.withProperty(zzbzVar102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzbz zzbzVar103 = new zzbz();
        zzbzVar103.zza(R.styleable.AppCompatTheme_textAppearancePopupMenuHeader);
        zzaZ = builder103.withProperty(zzbzVar103.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzbz zzbzVar104 = new zzbz();
        zzbzVar104.zza(R.styleable.AppCompatTheme_textAppearanceSearchResultSubtitle);
        zzba = builder104.withProperty(zzbzVar104.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzbz zzbzVar105 = new zzbz();
        zzbzVar105.zza(R.styleable.AppCompatTheme_textAppearanceSearchResultTitle);
        zzbb = builder105.withProperty(zzbzVar105.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzbz zzbzVar106 = new zzbz();
        zzbzVar106.zza(R.styleable.AppCompatTheme_textAppearanceSmallPopupMenu);
        zzbc = builder106.withProperty(zzbzVar106.zzb()).build();
        FieldDescriptor.Builder builder107 = FieldDescriptor.builder("onDeviceStainRemovalLogEvent");
        zzbz zzbzVar107 = new zzbz();
        zzbzVar107.zza(R.styleable.AppCompatTheme_textColorAlertDialogListItem);
        zzbd = builder107.withProperty(zzbzVar107.zzb()).build();
        FieldDescriptor.Builder builder108 = FieldDescriptor.builder("aggregatedOnDeviceStainRemovalLogEvent");
        zzbz zzbzVar108 = new zzbz();
        zzbzVar108.zza(R.styleable.AppCompatTheme_textColorSearchUrl);
        zzbe = builder108.withProperty(zzbzVar108.zzb()).build();
        FieldDescriptor.Builder builder109 = FieldDescriptor.builder("stainRemovalOptionalModuleLogEvent");
        zzbz zzbzVar109 = new zzbz();
        zzbzVar109.zza(R.styleable.AppCompatTheme_toolbarNavigationButtonStyle);
        zzbf = builder109.withProperty(zzbzVar109.zzb()).build();
        FieldDescriptor.Builder builder110 = FieldDescriptor.builder("onDeviceShadowRemovalLogEvent");
        zzbz zzbzVar110 = new zzbz();
        zzbzVar110.zza(R.styleable.AppCompatTheme_toolbarStyle);
        zzbg = builder110.withProperty(zzbzVar110.zzb()).build();
        FieldDescriptor.Builder builder111 = FieldDescriptor.builder("aggregatedOnDeviceShadowRemovalLogEvent");
        zzbz zzbzVar111 = new zzbz();
        zzbzVar111.zza(R.styleable.AppCompatTheme_tooltipForegroundColor);
        zzbh = builder111.withProperty(zzbzVar111.zzb()).build();
        FieldDescriptor.Builder builder112 = FieldDescriptor.builder("shadowRemovalOptionalModuleLogEvent");
        zzbz zzbzVar112 = new zzbz();
        zzbzVar112.zza(R.styleable.AppCompatTheme_tooltipFrameBackground);
        zzbi = builder112.withProperty(zzbzVar112.zzb()).build();
        FieldDescriptor.Builder builder113 = FieldDescriptor.builder("onDeviceDigitalInkSegmentationLogEvent");
        zzbz zzbzVar113 = new zzbz();
        zzbzVar113.zza(116);
        zzbj = builder113.withProperty(zzbzVar113.zzb()).build();
        FieldDescriptor.Builder builder114 = FieldDescriptor.builder("onDeviceDocumentScannerStartLogEvent");
        zzbz zzbzVar114 = new zzbz();
        zzbzVar114.zza(117);
        zzbk = builder114.withProperty(zzbzVar114.zzb()).build();
        FieldDescriptor.Builder builder115 = FieldDescriptor.builder("onDeviceDocumentScannerFinishLogEvent");
        zzbz zzbzVar115 = new zzbz();
        zzbzVar115.zza(118);
        zzbl = builder115.withProperty(zzbzVar115.zzb()).build();
        FieldDescriptor.Builder builder116 = FieldDescriptor.builder("onDeviceDocumentScannerUiStartLogEvent");
        zzbz zzbzVar116 = new zzbz();
        zzbzVar116.zza(119);
        zzbm = builder116.withProperty(zzbzVar116.zzb()).build();
        FieldDescriptor.Builder builder117 = FieldDescriptor.builder("onDeviceDocumentScannerUiFinishLogEvent");
        zzbz zzbzVar117 = new zzbz();
        zzbzVar117.zza(120);
        zzbn = builder117.withProperty(zzbzVar117.zzb()).build();
        FieldDescriptor.Builder builder118 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionStartLogEvent");
        zzbz zzbzVar118 = new zzbz();
        zzbzVar118.zza(121);
        zzbo = builder118.withProperty(zzbzVar118.zzb()).build();
        FieldDescriptor.Builder builder119 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionFinishLogEvent");
        zzbz zzbzVar119 = new zzbz();
        zzbzVar119.zza(122);
        zzbp = builder119.withProperty(zzbzVar119.zzb()).build();
        FieldDescriptor.Builder builder120 = FieldDescriptor.builder("onDeviceDocumentScannerUiCreateLogEvent");
        zzbz zzbzVar120 = new zzbz();
        zzbzVar120.zza(123);
        zzbq = builder120.withProperty(zzbzVar120.zzb()).build();
        FieldDescriptor.Builder builder121 = FieldDescriptor.builder("onDeviceSubjectSegmentationCreateLogEvent");
        zzbz zzbzVar121 = new zzbz();
        zzbzVar121.zza(124);
        zzbr = builder121.withProperty(zzbzVar121.zzb()).build();
        FieldDescriptor.Builder builder122 = FieldDescriptor.builder("onDeviceSubjectSegmentationLoadLogEvent");
        zzbz zzbzVar122 = new zzbz();
        zzbzVar122.zza(125);
        zzbs = builder122.withProperty(zzbzVar122.zzb()).build();
        FieldDescriptor.Builder builder123 = FieldDescriptor.builder("onDeviceSubjectSegmentationInferenceLogEvent");
        zzbz zzbzVar123 = new zzbz();
        zzbzVar123.zza(126);
        zzbt = builder123.withProperty(zzbzVar123.zzb()).build();
        FieldDescriptor.Builder builder124 = FieldDescriptor.builder("aggregatedOnDeviceSubjectSegmentationLogEvent");
        zzbz zzbzVar124 = new zzbz();
        zzbzVar124.zza(127);
        zzbu = builder124.withProperty(zzbzVar124.zzb()).build();
        FieldDescriptor.Builder builder125 = FieldDescriptor.builder("subjectSegmentationOptionalModuleLogEvent");
        zzbz zzbzVar125 = new zzbz();
        zzbzVar125.zza(128);
        zzbv = builder125.withProperty(zzbzVar125.zzb()).build();
        FieldDescriptor.Builder builder126 = FieldDescriptor.builder("documentScannerUiModuleScreenViewEvent");
        zzbz zzbzVar126 = new zzbz();
        zzbzVar126.zza(129);
        zzbw = builder126.withProperty(zzbzVar126.zzb()).build();
        FieldDescriptor.Builder builder127 = FieldDescriptor.builder("documentScannerUiModuleScreenClickEvent");
        zzbz zzbzVar127 = new zzbz();
        zzbzVar127.zza(130);
        zzbx = builder127.withProperty(zzbzVar127.zzb()).build();
        FieldDescriptor.Builder builder128 = FieldDescriptor.builder("documentScannerUiModuleScreenErrorEvent");
        zzbz zzbzVar128 = new zzbz();
        zzbzVar128.zza(131);
        zzby = builder128.withProperty(zzbzVar128.zzb()).build();
    }

    private zzhu() {
    }

    @Override // com.google.firebase.encoders.ObjectEncoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zzoe zzoeVar = (zzoe) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, zzoeVar.zzg());
        objectEncoderContext.add(zzc, zzoeVar.zzc());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, zzoeVar.zzb());
        objectEncoderContext.add(zzf, (Object) null);
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, (Object) null);
        objectEncoderContext.add(zzO, (Object) null);
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, (Object) null);
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
        objectEncoderContext.add(zzaz, (Object) null);
        objectEncoderContext.add(zzaA, (Object) null);
        objectEncoderContext.add(zzaB, (Object) null);
        objectEncoderContext.add(zzaC, (Object) null);
        objectEncoderContext.add(zzaD, (Object) null);
        objectEncoderContext.add(zzaE, (Object) null);
        objectEncoderContext.add(zzaF, (Object) null);
        objectEncoderContext.add(zzaG, (Object) null);
        objectEncoderContext.add(zzaH, (Object) null);
        objectEncoderContext.add(zzaI, (Object) null);
        objectEncoderContext.add(zzaJ, (Object) null);
        objectEncoderContext.add(zzaK, (Object) null);
        objectEncoderContext.add(zzaL, (Object) null);
        objectEncoderContext.add(zzaM, (Object) null);
        objectEncoderContext.add(zzaN, (Object) null);
        objectEncoderContext.add(zzaO, (Object) null);
        objectEncoderContext.add(zzaP, (Object) null);
        objectEncoderContext.add(zzaQ, (Object) null);
        objectEncoderContext.add(zzaR, (Object) null);
        objectEncoderContext.add(zzaS, (Object) null);
        objectEncoderContext.add(zzaT, (Object) null);
        objectEncoderContext.add(zzaU, (Object) null);
        objectEncoderContext.add(zzaV, (Object) null);
        objectEncoderContext.add(zzaW, (Object) null);
        objectEncoderContext.add(zzaX, (Object) null);
        objectEncoderContext.add(zzaY, (Object) null);
        objectEncoderContext.add(zzaZ, (Object) null);
        objectEncoderContext.add(zzba, (Object) null);
        objectEncoderContext.add(zzbb, (Object) null);
        objectEncoderContext.add(zzbc, (Object) null);
        objectEncoderContext.add(zzbd, (Object) null);
        objectEncoderContext.add(zzbe, (Object) null);
        objectEncoderContext.add(zzbf, (Object) null);
        objectEncoderContext.add(zzbg, (Object) null);
        objectEncoderContext.add(zzbh, (Object) null);
        objectEncoderContext.add(zzbi, (Object) null);
        objectEncoderContext.add(zzbj, (Object) null);
        objectEncoderContext.add(zzbk, (Object) null);
        objectEncoderContext.add(zzbl, (Object) null);
        objectEncoderContext.add(zzbm, (Object) null);
        objectEncoderContext.add(zzbn, (Object) null);
        objectEncoderContext.add(zzbo, (Object) null);
        objectEncoderContext.add(zzbp, (Object) null);
        objectEncoderContext.add(zzbq, (Object) null);
        objectEncoderContext.add(zzbr, zzoeVar.zzd());
        objectEncoderContext.add(zzbs, zzoeVar.zzf());
        objectEncoderContext.add(zzbt, zzoeVar.zze());
        objectEncoderContext.add(zzbu, zzoeVar.zza());
        objectEncoderContext.add(zzbv, (Object) null);
        objectEncoderContext.add(zzbw, (Object) null);
        objectEncoderContext.add(zzbx, (Object) null);
        objectEncoderContext.add(zzby, (Object) null);
    }
}
